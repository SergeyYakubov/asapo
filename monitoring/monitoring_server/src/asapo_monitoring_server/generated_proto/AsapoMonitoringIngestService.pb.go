// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: AsapoMonitoringIngestService.proto

package generated_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProducerToReceiverTransferDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineStepId                         string `protobuf:"bytes,1,opt,name=pipelineStepId,proto3" json:"pipelineStepId,omitempty"` // Customizable from producerLib
	ProducerInstanceId                     string `protobuf:"bytes,2,opt,name=producerInstanceId,proto3" json:"producerInstanceId,omitempty"`
	Beamtime                               string `protobuf:"bytes,3,opt,name=beamtime,proto3" json:"beamtime,omitempty"`
	Source                                 string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Stream                                 string `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`
	FileCount                              uint64 `protobuf:"varint,6,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
	TotalFileSize                          uint64 `protobuf:"varint,7,opt,name=totalFileSize,proto3" json:"totalFileSize,omitempty"`
	TotalTransferReceiveTimeInMicroseconds uint64 `protobuf:"varint,8,opt,name=totalTransferReceiveTimeInMicroseconds,proto3" json:"totalTransferReceiveTimeInMicroseconds,omitempty"`
	TotalWriteIoTimeInMicroseconds         uint64 `protobuf:"varint,9,opt,name=totalWriteIoTimeInMicroseconds,proto3" json:"totalWriteIoTimeInMicroseconds,omitempty"`
	TotalDbTimeInMicroseconds              uint64 `protobuf:"varint,10,opt,name=totalDbTimeInMicroseconds,proto3" json:"totalDbTimeInMicroseconds,omitempty"`
}

func (x *ProducerToReceiverTransferDataPoint) Reset() {
	*x = ProducerToReceiverTransferDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProducerToReceiverTransferDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProducerToReceiverTransferDataPoint) ProtoMessage() {}

func (x *ProducerToReceiverTransferDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProducerToReceiverTransferDataPoint.ProtoReflect.Descriptor instead.
func (*ProducerToReceiverTransferDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{0}
}

func (x *ProducerToReceiverTransferDataPoint) GetPipelineStepId() string {
	if x != nil {
		return x.PipelineStepId
	}
	return ""
}

func (x *ProducerToReceiverTransferDataPoint) GetProducerInstanceId() string {
	if x != nil {
		return x.ProducerInstanceId
	}
	return ""
}

func (x *ProducerToReceiverTransferDataPoint) GetBeamtime() string {
	if x != nil {
		return x.Beamtime
	}
	return ""
}

func (x *ProducerToReceiverTransferDataPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *ProducerToReceiverTransferDataPoint) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *ProducerToReceiverTransferDataPoint) GetFileCount() uint64 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *ProducerToReceiverTransferDataPoint) GetTotalFileSize() uint64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

func (x *ProducerToReceiverTransferDataPoint) GetTotalTransferReceiveTimeInMicroseconds() uint64 {
	if x != nil {
		return x.TotalTransferReceiveTimeInMicroseconds
	}
	return 0
}

func (x *ProducerToReceiverTransferDataPoint) GetTotalWriteIoTimeInMicroseconds() uint64 {
	if x != nil {
		return x.TotalWriteIoTimeInMicroseconds
	}
	return 0
}

func (x *ProducerToReceiverTransferDataPoint) GetTotalDbTimeInMicroseconds() uint64 {
	if x != nil {
		return x.TotalDbTimeInMicroseconds
	}
	return 0
}

type BrokerRequestDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineStepId     string `protobuf:"bytes,1,opt,name=pipelineStepId,proto3" json:"pipelineStepId,omitempty"` // Customizable from consumerLib can indicates a linkage between a consumer and a producer
	ConsumerInstanceId string `protobuf:"bytes,2,opt,name=consumerInstanceId,proto3" json:"consumerInstanceId,omitempty"`
	Command            string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"` // e.g. 'get_next', 'get_last', 'get_by_id'
	Beamtime           string `protobuf:"bytes,4,opt,name=beamtime,proto3" json:"beamtime,omitempty"`
	Source             string `protobuf:"bytes,5,opt,name=source,proto3" json:"source,omitempty"`
	Stream             string `protobuf:"bytes,6,opt,name=stream,proto3" json:"stream,omitempty"`
	FileCount          uint64 `protobuf:"varint,7,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
	TotalFileSize      uint64 `protobuf:"varint,8,opt,name=totalFileSize,proto3" json:"totalFileSize,omitempty"`
}

func (x *BrokerRequestDataPoint) Reset() {
	*x = BrokerRequestDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerRequestDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerRequestDataPoint) ProtoMessage() {}

func (x *BrokerRequestDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerRequestDataPoint.ProtoReflect.Descriptor instead.
func (*BrokerRequestDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{1}
}

func (x *BrokerRequestDataPoint) GetPipelineStepId() string {
	if x != nil {
		return x.PipelineStepId
	}
	return ""
}

func (x *BrokerRequestDataPoint) GetConsumerInstanceId() string {
	if x != nil {
		return x.ConsumerInstanceId
	}
	return ""
}

func (x *BrokerRequestDataPoint) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *BrokerRequestDataPoint) GetBeamtime() string {
	if x != nil {
		return x.Beamtime
	}
	return ""
}

func (x *BrokerRequestDataPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *BrokerRequestDataPoint) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *BrokerRequestDataPoint) GetFileCount() uint64 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *BrokerRequestDataPoint) GetTotalFileSize() uint64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

type RdsMemoryDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Beamtime   string `protobuf:"bytes,1,opt,name=beamtime,proto3" json:"beamtime,omitempty"`
	Source     string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	Stream     string `protobuf:"bytes,3,opt,name=stream,proto3" json:"stream,omitempty"`
	UsedBytes  uint64 `protobuf:"varint,4,opt,name=usedBytes,proto3" json:"usedBytes,omitempty"`
	TotalBytes uint64 `protobuf:"varint,5,opt,name=totalBytes,proto3" json:"totalBytes,omitempty"`
}

func (x *RdsMemoryDataPoint) Reset() {
	*x = RdsMemoryDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdsMemoryDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdsMemoryDataPoint) ProtoMessage() {}

func (x *RdsMemoryDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdsMemoryDataPoint.ProtoReflect.Descriptor instead.
func (*RdsMemoryDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{2}
}

func (x *RdsMemoryDataPoint) GetBeamtime() string {
	if x != nil {
		return x.Beamtime
	}
	return ""
}

func (x *RdsMemoryDataPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RdsMemoryDataPoint) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *RdsMemoryDataPoint) GetUsedBytes() uint64 {
	if x != nil {
		return x.UsedBytes
	}
	return 0
}

func (x *RdsMemoryDataPoint) GetTotalBytes() uint64 {
	if x != nil {
		return x.TotalBytes
	}
	return 0
}

type RdsToConsumerDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineStepId                      string `protobuf:"bytes,1,opt,name=pipelineStepId,proto3" json:"pipelineStepId,omitempty"` // Customizable from consumerLib can indicates a linkage between a consumer and a producer
	ConsumerInstanceId                  string `protobuf:"bytes,2,opt,name=consumerInstanceId,proto3" json:"consumerInstanceId,omitempty"`
	Beamtime                            string `protobuf:"bytes,3,opt,name=beamtime,proto3" json:"beamtime,omitempty"`
	Source                              string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Stream                              string `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`
	Hits                                uint64 `protobuf:"varint,6,opt,name=hits,proto3" json:"hits,omitempty"`
	Misses                              uint64 `protobuf:"varint,7,opt,name=misses,proto3" json:"misses,omitempty"`
	TotalFileSize                       uint64 `protobuf:"varint,8,opt,name=totalFileSize,proto3" json:"totalFileSize,omitempty"`
	TotalTransferSendTimeInMicroseconds uint64 `protobuf:"varint,9,opt,name=totalTransferSendTimeInMicroseconds,proto3" json:"totalTransferSendTimeInMicroseconds,omitempty"`
}

func (x *RdsToConsumerDataPoint) Reset() {
	*x = RdsToConsumerDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdsToConsumerDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdsToConsumerDataPoint) ProtoMessage() {}

func (x *RdsToConsumerDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdsToConsumerDataPoint.ProtoReflect.Descriptor instead.
func (*RdsToConsumerDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{3}
}

func (x *RdsToConsumerDataPoint) GetPipelineStepId() string {
	if x != nil {
		return x.PipelineStepId
	}
	return ""
}

func (x *RdsToConsumerDataPoint) GetConsumerInstanceId() string {
	if x != nil {
		return x.ConsumerInstanceId
	}
	return ""
}

func (x *RdsToConsumerDataPoint) GetBeamtime() string {
	if x != nil {
		return x.Beamtime
	}
	return ""
}

func (x *RdsToConsumerDataPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *RdsToConsumerDataPoint) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *RdsToConsumerDataPoint) GetHits() uint64 {
	if x != nil {
		return x.Hits
	}
	return 0
}

func (x *RdsToConsumerDataPoint) GetMisses() uint64 {
	if x != nil {
		return x.Misses
	}
	return 0
}

func (x *RdsToConsumerDataPoint) GetTotalFileSize() uint64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

func (x *RdsToConsumerDataPoint) GetTotalTransferSendTimeInMicroseconds() uint64 {
	if x != nil {
		return x.TotalTransferSendTimeInMicroseconds
	}
	return 0
}

type FdsToConsumerDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PipelineStepId                      string `protobuf:"bytes,1,opt,name=pipelineStepId,proto3" json:"pipelineStepId,omitempty"` // Customizable from consumerLib can indicates a linkage between a consumer and a producer
	ConsumerInstanceId                  string `protobuf:"bytes,2,opt,name=consumerInstanceId,proto3" json:"consumerInstanceId,omitempty"`
	Beamtime                            string `protobuf:"bytes,3,opt,name=beamtime,proto3" json:"beamtime,omitempty"`
	Source                              string `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	Stream                              string `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`
	FileCount                           uint64 `protobuf:"varint,6,opt,name=fileCount,proto3" json:"fileCount,omitempty"`
	TotalFileSize                       uint64 `protobuf:"varint,7,opt,name=totalFileSize,proto3" json:"totalFileSize,omitempty"`
	TotalTransferSendTimeInMicroseconds uint64 `protobuf:"varint,8,opt,name=totalTransferSendTimeInMicroseconds,proto3" json:"totalTransferSendTimeInMicroseconds,omitempty"`
}

func (x *FdsToConsumerDataPoint) Reset() {
	*x = FdsToConsumerDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FdsToConsumerDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FdsToConsumerDataPoint) ProtoMessage() {}

func (x *FdsToConsumerDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FdsToConsumerDataPoint.ProtoReflect.Descriptor instead.
func (*FdsToConsumerDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{4}
}

func (x *FdsToConsumerDataPoint) GetPipelineStepId() string {
	if x != nil {
		return x.PipelineStepId
	}
	return ""
}

func (x *FdsToConsumerDataPoint) GetConsumerInstanceId() string {
	if x != nil {
		return x.ConsumerInstanceId
	}
	return ""
}

func (x *FdsToConsumerDataPoint) GetBeamtime() string {
	if x != nil {
		return x.Beamtime
	}
	return ""
}

func (x *FdsToConsumerDataPoint) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *FdsToConsumerDataPoint) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

func (x *FdsToConsumerDataPoint) GetFileCount() uint64 {
	if x != nil {
		return x.FileCount
	}
	return 0
}

func (x *FdsToConsumerDataPoint) GetTotalFileSize() uint64 {
	if x != nil {
		return x.TotalFileSize
	}
	return 0
}

func (x *FdsToConsumerDataPoint) GetTotalTransferSendTimeInMicroseconds() uint64 {
	if x != nil {
		return x.TotalTransferSendTimeInMicroseconds
	}
	return 0
}

// ---- Containers ----
type ReceiverDataPointContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiverName          string                                 `protobuf:"bytes,1,opt,name=receiverName,proto3" json:"receiverName,omitempty"` // Receiver InstanceId
	TimestampMs           uint64                                 `protobuf:"varint,2,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
	GroupedP2RTransfers   []*ProducerToReceiverTransferDataPoint `protobuf:"bytes,3,rep,name=groupedP2rTransfers,proto3" json:"groupedP2rTransfers,omitempty"`
	GroupedRds2CTransfers []*RdsToConsumerDataPoint              `protobuf:"bytes,4,rep,name=groupedRds2cTransfers,proto3" json:"groupedRds2cTransfers,omitempty"`
	GroupedMemoryStats    []*RdsMemoryDataPoint                  `protobuf:"bytes,5,rep,name=groupedMemoryStats,proto3" json:"groupedMemoryStats,omitempty"`
}

func (x *ReceiverDataPointContainer) Reset() {
	*x = ReceiverDataPointContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceiverDataPointContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiverDataPointContainer) ProtoMessage() {}

func (x *ReceiverDataPointContainer) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiverDataPointContainer.ProtoReflect.Descriptor instead.
func (*ReceiverDataPointContainer) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{5}
}

func (x *ReceiverDataPointContainer) GetReceiverName() string {
	if x != nil {
		return x.ReceiverName
	}
	return ""
}

func (x *ReceiverDataPointContainer) GetTimestampMs() uint64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *ReceiverDataPointContainer) GetGroupedP2RTransfers() []*ProducerToReceiverTransferDataPoint {
	if x != nil {
		return x.GroupedP2RTransfers
	}
	return nil
}

func (x *ReceiverDataPointContainer) GetGroupedRds2CTransfers() []*RdsToConsumerDataPoint {
	if x != nil {
		return x.GroupedRds2CTransfers
	}
	return nil
}

func (x *ReceiverDataPointContainer) GetGroupedMemoryStats() []*RdsMemoryDataPoint {
	if x != nil {
		return x.GroupedMemoryStats
	}
	return nil
}

type BrokerDataPointContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrokerName            string                    `protobuf:"bytes,1,opt,name=brokerName,proto3" json:"brokerName,omitempty"` // Broker InstanceId
	TimestampMs           uint64                    `protobuf:"varint,2,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
	GroupedBrokerRequests []*BrokerRequestDataPoint `protobuf:"bytes,3,rep,name=groupedBrokerRequests,proto3" json:"groupedBrokerRequests,omitempty"`
}

func (x *BrokerDataPointContainer) Reset() {
	*x = BrokerDataPointContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BrokerDataPointContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrokerDataPointContainer) ProtoMessage() {}

func (x *BrokerDataPointContainer) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrokerDataPointContainer.ProtoReflect.Descriptor instead.
func (*BrokerDataPointContainer) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{6}
}

func (x *BrokerDataPointContainer) GetBrokerName() string {
	if x != nil {
		return x.BrokerName
	}
	return ""
}

func (x *BrokerDataPointContainer) GetTimestampMs() uint64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *BrokerDataPointContainer) GetGroupedBrokerRequests() []*BrokerRequestDataPoint {
	if x != nil {
		return x.GroupedBrokerRequests
	}
	return nil
}

type FtsToConsumerDataPointContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FtsName             string                    `protobuf:"bytes,1,opt,name=ftsName,proto3" json:"ftsName,omitempty"` // FTS InstanceId
	TimestampMs         uint64                    `protobuf:"varint,2,opt,name=timestampMs,proto3" json:"timestampMs,omitempty"`
	GroupedFdsTransfers []*FdsToConsumerDataPoint `protobuf:"bytes,3,rep,name=groupedFdsTransfers,proto3" json:"groupedFdsTransfers,omitempty"`
}

func (x *FtsToConsumerDataPointContainer) Reset() {
	*x = FtsToConsumerDataPointContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringIngestService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FtsToConsumerDataPointContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FtsToConsumerDataPointContainer) ProtoMessage() {}

func (x *FtsToConsumerDataPointContainer) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringIngestService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FtsToConsumerDataPointContainer.ProtoReflect.Descriptor instead.
func (*FtsToConsumerDataPointContainer) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringIngestService_proto_rawDescGZIP(), []int{7}
}

func (x *FtsToConsumerDataPointContainer) GetFtsName() string {
	if x != nil {
		return x.FtsName
	}
	return ""
}

func (x *FtsToConsumerDataPointContainer) GetTimestampMs() uint64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *FtsToConsumerDataPointContainer) GetGroupedFdsTransfers() []*FdsToConsumerDataPoint {
	if x != nil {
		return x.GroupedFdsTransfers
	}
	return nil
}

var File_AsapoMonitoringIngestService_proto protoreflect.FileDescriptor

var file_AsapoMonitoringIngestService_proto_rawDesc = []byte{
	0x0a, 0x22, 0x41, 0x73, 0x61, 0x70, 0x6f, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x41, 0x73, 0x61, 0x70, 0x6f, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x03, 0x0a, 0x23, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x65, 0x72, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69,
	0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x61, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x61, 0x6d,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x56, 0x0a, 0x26, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x26, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x46, 0x0a, 0x1e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x49, 0x6f,
	0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x49, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x19, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x44, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x19, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x62, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x9a, 0x02, 0x0a, 0x16, 0x42, 0x72, 0x6f, 0x6b, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c,
	0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0x9e, 0x01, 0x0a, 0x12, 0x52, 0x64, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65,
	0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65,
	0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x22, 0xe0, 0x02, 0x0a, 0x16, 0x52, 0x64, 0x73, 0x54, 0x6f, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x26, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65, 0x61, 0x6d, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x04, 0x68, 0x69, 0x74, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x50, 0x0a, 0x23, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x23, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xd2, 0x02, 0x0a, 0x16, 0x46, 0x64, 0x73, 0x54,
	0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74,
	0x65, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x69, 0x70, 0x65,
	0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x65,
	0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x65,
	0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x50, 0x0a, 0x23, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x23, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e,
	0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xce, 0x02, 0x0a,
	0x1a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d,
	0x73, 0x12, 0x56, 0x0a, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x32, 0x72, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x54, 0x6f, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x72, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x50, 0x32, 0x72,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x4d, 0x0a, 0x15, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x65, 0x64, 0x52, 0x64, 0x73, 0x32, 0x63, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x64, 0x73, 0x54, 0x6f,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x52, 0x64, 0x73, 0x32, 0x63, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x52, 0x64, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x73, 0x22, 0xab, 0x01,
	0x0a, 0x18, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x62, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x12, 0x4d, 0x0a, 0x15,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x42, 0x72,
	0x6f, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x15, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x42, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x1f,
	0x46, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x74, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x73, 0x12, 0x49, 0x0a, 0x13, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x46, 0x64, 0x73, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x46, 0x64, 0x73, 0x54, 0x6f,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x13, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x46, 0x64, 0x73, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x32, 0xe3, 0x01, 0x0a, 0x1c, 0x41, 0x73, 0x61, 0x70, 0x6f,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x67, 0x65, 0x73, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x18, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x1b, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x16, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x19, 0x2e, 0x42, 0x72, 0x6f, 0x6b, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x1a,
	0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x13, 0x49, 0x6e, 0x73,
	0x65, 0x72, 0x74, 0x46, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x20, 0x2e, 0x46, 0x74, 0x73, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x1a, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11,
	0x2e, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_AsapoMonitoringIngestService_proto_rawDescOnce sync.Once
	file_AsapoMonitoringIngestService_proto_rawDescData = file_AsapoMonitoringIngestService_proto_rawDesc
)

func file_AsapoMonitoringIngestService_proto_rawDescGZIP() []byte {
	file_AsapoMonitoringIngestService_proto_rawDescOnce.Do(func() {
		file_AsapoMonitoringIngestService_proto_rawDescData = protoimpl.X.CompressGZIP(file_AsapoMonitoringIngestService_proto_rawDescData)
	})
	return file_AsapoMonitoringIngestService_proto_rawDescData
}

var file_AsapoMonitoringIngestService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_AsapoMonitoringIngestService_proto_goTypes = []interface{}{
	(*ProducerToReceiverTransferDataPoint)(nil), // 0: ProducerToReceiverTransferDataPoint
	(*BrokerRequestDataPoint)(nil),              // 1: BrokerRequestDataPoint
	(*RdsMemoryDataPoint)(nil),                  // 2: RdsMemoryDataPoint
	(*RdsToConsumerDataPoint)(nil),              // 3: RdsToConsumerDataPoint
	(*FdsToConsumerDataPoint)(nil),              // 4: FdsToConsumerDataPoint
	(*ReceiverDataPointContainer)(nil),          // 5: ReceiverDataPointContainer
	(*BrokerDataPointContainer)(nil),            // 6: BrokerDataPointContainer
	(*FtsToConsumerDataPointContainer)(nil),     // 7: FtsToConsumerDataPointContainer
	(*Empty)(nil),                               // 8: Empty
}
var file_AsapoMonitoringIngestService_proto_depIdxs = []int32{
	0, // 0: ReceiverDataPointContainer.groupedP2rTransfers:type_name -> ProducerToReceiverTransferDataPoint
	3, // 1: ReceiverDataPointContainer.groupedRds2cTransfers:type_name -> RdsToConsumerDataPoint
	2, // 2: ReceiverDataPointContainer.groupedMemoryStats:type_name -> RdsMemoryDataPoint
	1, // 3: BrokerDataPointContainer.groupedBrokerRequests:type_name -> BrokerRequestDataPoint
	4, // 4: FtsToConsumerDataPointContainer.groupedFdsTransfers:type_name -> FdsToConsumerDataPoint
	5, // 5: AsapoMonitoringIngestService.InsertReceiverDataPoints:input_type -> ReceiverDataPointContainer
	6, // 6: AsapoMonitoringIngestService.InsertBrokerDataPoints:input_type -> BrokerDataPointContainer
	7, // 7: AsapoMonitoringIngestService.InsertFtsDataPoints:input_type -> FtsToConsumerDataPointContainer
	8, // 8: AsapoMonitoringIngestService.InsertReceiverDataPoints:output_type -> Empty
	8, // 9: AsapoMonitoringIngestService.InsertBrokerDataPoints:output_type -> Empty
	8, // 10: AsapoMonitoringIngestService.InsertFtsDataPoints:output_type -> Empty
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_AsapoMonitoringIngestService_proto_init() }
func file_AsapoMonitoringIngestService_proto_init() {
	if File_AsapoMonitoringIngestService_proto != nil {
		return
	}
	file_AsapoMonitoringCommonService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_AsapoMonitoringIngestService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProducerToReceiverTransferDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerRequestDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdsMemoryDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdsToConsumerDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FdsToConsumerDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceiverDataPointContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BrokerDataPointContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringIngestService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FtsToConsumerDataPointContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AsapoMonitoringIngestService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_AsapoMonitoringIngestService_proto_goTypes,
		DependencyIndexes: file_AsapoMonitoringIngestService_proto_depIdxs,
		MessageInfos:      file_AsapoMonitoringIngestService_proto_msgTypes,
	}.Build()
	File_AsapoMonitoringIngestService_proto = out.File
	file_AsapoMonitoringIngestService_proto_rawDesc = nil
	file_AsapoMonitoringIngestService_proto_goTypes = nil
	file_AsapoMonitoringIngestService_proto_depIdxs = nil
}
