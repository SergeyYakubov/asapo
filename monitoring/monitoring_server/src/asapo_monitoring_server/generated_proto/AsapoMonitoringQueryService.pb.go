// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: AsapoMonitoringQueryService.proto

package generated_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PipelineConnectionQueryMode int32

const (
	PipelineConnectionQueryMode_INVALID_QUERY_MODE PipelineConnectionQueryMode = 0
	PipelineConnectionQueryMode_ExactPath          PipelineConnectionQueryMode = 1
	PipelineConnectionQueryMode_JustRelatedToStep  PipelineConnectionQueryMode = 2
)

// Enum value maps for PipelineConnectionQueryMode.
var (
	PipelineConnectionQueryMode_name = map[int32]string{
		0: "INVALID_QUERY_MODE",
		1: "ExactPath",
		2: "JustRelatedToStep",
	}
	PipelineConnectionQueryMode_value = map[string]int32{
		"INVALID_QUERY_MODE": 0,
		"ExactPath":          1,
		"JustRelatedToStep":  2,
	}
)

func (x PipelineConnectionQueryMode) Enum() *PipelineConnectionQueryMode {
	p := new(PipelineConnectionQueryMode)
	*p = x
	return p
}

func (x PipelineConnectionQueryMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineConnectionQueryMode) Descriptor() protoreflect.EnumDescriptor {
	return file_AsapoMonitoringQueryService_proto_enumTypes[0].Descriptor()
}

func (PipelineConnectionQueryMode) Type() protoreflect.EnumType {
	return &file_AsapoMonitoringQueryService_proto_enumTypes[0]
}

func (x PipelineConnectionQueryMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineConnectionQueryMode.Descriptor instead.
func (PipelineConnectionQueryMode) EnumDescriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{0}
}

type DataPointsQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromTimestamp          uint64                      `protobuf:"varint,1,opt,name=fromTimestamp,proto3" json:"fromTimestamp,omitempty"`
	ToTimestamp            uint64                      `protobuf:"varint,2,opt,name=toTimestamp,proto3" json:"toTimestamp,omitempty"`
	BeamtimeFilter         string                      `protobuf:"bytes,4,opt,name=beamtimeFilter,proto3" json:"beamtimeFilter,omitempty"`
	SourceFilter           string                      `protobuf:"bytes,5,opt,name=sourceFilter,proto3" json:"sourceFilter,omitempty"`
	ReceiverFilter         string                      `protobuf:"bytes,6,opt,name=receiverFilter,proto3" json:"receiverFilter,omitempty"`
	FromPipelineStepFilter string                      `protobuf:"bytes,7,opt,name=fromPipelineStepFilter,proto3" json:"fromPipelineStepFilter,omitempty"`
	ToPipelineStepFilter   string                      `protobuf:"bytes,8,opt,name=toPipelineStepFilter,proto3" json:"toPipelineStepFilter,omitempty"`
	PipelineQueryMode      PipelineConnectionQueryMode `protobuf:"varint,9,opt,name=pipelineQueryMode,proto3,enum=PipelineConnectionQueryMode" json:"pipelineQueryMode,omitempty"`
}

func (x *DataPointsQuery) Reset() {
	*x = DataPointsQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointsQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointsQuery) ProtoMessage() {}

func (x *DataPointsQuery) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointsQuery.ProtoReflect.Descriptor instead.
func (*DataPointsQuery) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{0}
}

func (x *DataPointsQuery) GetFromTimestamp() uint64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *DataPointsQuery) GetToTimestamp() uint64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

func (x *DataPointsQuery) GetBeamtimeFilter() string {
	if x != nil {
		return x.BeamtimeFilter
	}
	return ""
}

func (x *DataPointsQuery) GetSourceFilter() string {
	if x != nil {
		return x.SourceFilter
	}
	return ""
}

func (x *DataPointsQuery) GetReceiverFilter() string {
	if x != nil {
		return x.ReceiverFilter
	}
	return ""
}

func (x *DataPointsQuery) GetFromPipelineStepFilter() string {
	if x != nil {
		return x.FromPipelineStepFilter
	}
	return ""
}

func (x *DataPointsQuery) GetToPipelineStepFilter() string {
	if x != nil {
		return x.ToPipelineStepFilter
	}
	return ""
}

func (x *DataPointsQuery) GetPipelineQueryMode() PipelineConnectionQueryMode {
	if x != nil {
		return x.PipelineQueryMode
	}
	return PipelineConnectionQueryMode_INVALID_QUERY_MODE
}

type TotalTransferRateDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalBytesPerSecRecv    uint64 `protobuf:"varint,1,opt,name=totalBytesPerSecRecv,proto3" json:"totalBytesPerSecRecv,omitempty"`
	TotalBytesPerSecSend    uint64 `protobuf:"varint,2,opt,name=totalBytesPerSecSend,proto3" json:"totalBytesPerSecSend,omitempty"`
	TotalBytesPerSecRdsSend uint64 `protobuf:"varint,3,opt,name=totalBytesPerSecRdsSend,proto3" json:"totalBytesPerSecRdsSend,omitempty"`
	TotalBytesPerSecFtsSend uint64 `protobuf:"varint,4,opt,name=totalBytesPerSecFtsSend,proto3" json:"totalBytesPerSecFtsSend,omitempty"`
}

func (x *TotalTransferRateDataPoint) Reset() {
	*x = TotalTransferRateDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalTransferRateDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalTransferRateDataPoint) ProtoMessage() {}

func (x *TotalTransferRateDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalTransferRateDataPoint.ProtoReflect.Descriptor instead.
func (*TotalTransferRateDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{1}
}

func (x *TotalTransferRateDataPoint) GetTotalBytesPerSecRecv() uint64 {
	if x != nil {
		return x.TotalBytesPerSecRecv
	}
	return 0
}

func (x *TotalTransferRateDataPoint) GetTotalBytesPerSecSend() uint64 {
	if x != nil {
		return x.TotalBytesPerSecSend
	}
	return 0
}

func (x *TotalTransferRateDataPoint) GetTotalBytesPerSecRdsSend() uint64 {
	if x != nil {
		return x.TotalBytesPerSecRdsSend
	}
	return 0
}

func (x *TotalTransferRateDataPoint) GetTotalBytesPerSecFtsSend() uint64 {
	if x != nil {
		return x.TotalBytesPerSecFtsSend
	}
	return 0
}

type TotalFileRateDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalRequests uint32 `protobuf:"varint,1,opt,name=totalRequests,proto3" json:"totalRequests,omitempty"`
	CacheMisses   uint32 `protobuf:"varint,2,opt,name=cacheMisses,proto3" json:"cacheMisses,omitempty"`
	FromCache     uint32 `protobuf:"varint,3,opt,name=fromCache,proto3" json:"fromCache,omitempty"`
	FromDisk      uint32 `protobuf:"varint,4,opt,name=fromDisk,proto3" json:"fromDisk,omitempty"`
}

func (x *TotalFileRateDataPoint) Reset() {
	*x = TotalFileRateDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TotalFileRateDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TotalFileRateDataPoint) ProtoMessage() {}

func (x *TotalFileRateDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TotalFileRateDataPoint.ProtoReflect.Descriptor instead.
func (*TotalFileRateDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{2}
}

func (x *TotalFileRateDataPoint) GetTotalRequests() uint32 {
	if x != nil {
		return x.TotalRequests
	}
	return 0
}

func (x *TotalFileRateDataPoint) GetCacheMisses() uint32 {
	if x != nil {
		return x.CacheMisses
	}
	return 0
}

func (x *TotalFileRateDataPoint) GetFromCache() uint32 {
	if x != nil {
		return x.FromCache
	}
	return 0
}

func (x *TotalFileRateDataPoint) GetFromDisk() uint32 {
	if x != nil {
		return x.FromDisk
	}
	return 0
}

type TaskTimeDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceiveIoTimeUs         uint32 `protobuf:"varint,1,opt,name=receiveIoTimeUs,proto3" json:"receiveIoTimeUs,omitempty"`
	WriteToDiskTimeUs       uint32 `protobuf:"varint,2,opt,name=writeToDiskTimeUs,proto3" json:"writeToDiskTimeUs,omitempty"`
	WriteToDatabaseTimeUs   uint32 `protobuf:"varint,3,opt,name=writeToDatabaseTimeUs,proto3" json:"writeToDatabaseTimeUs,omitempty"`
	RdsSendToConsumerTimeUs uint32 `protobuf:"varint,4,opt,name=rdsSendToConsumerTimeUs,proto3" json:"rdsSendToConsumerTimeUs,omitempty"`
}

func (x *TaskTimeDataPoint) Reset() {
	*x = TaskTimeDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTimeDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTimeDataPoint) ProtoMessage() {}

func (x *TaskTimeDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTimeDataPoint.ProtoReflect.Descriptor instead.
func (*TaskTimeDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{3}
}

func (x *TaskTimeDataPoint) GetReceiveIoTimeUs() uint32 {
	if x != nil {
		return x.ReceiveIoTimeUs
	}
	return 0
}

func (x *TaskTimeDataPoint) GetWriteToDiskTimeUs() uint32 {
	if x != nil {
		return x.WriteToDiskTimeUs
	}
	return 0
}

func (x *TaskTimeDataPoint) GetWriteToDatabaseTimeUs() uint32 {
	if x != nil {
		return x.WriteToDatabaseTimeUs
	}
	return 0
}

func (x *TaskTimeDataPoint) GetRdsSendToConsumerTimeUs() uint32 {
	if x != nil {
		return x.RdsSendToConsumerTimeUs
	}
	return 0
}

type RdsMemoryUsageDataPoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalUsedMemory uint64 `protobuf:"varint,1,opt,name=totalUsedMemory,proto3" json:"totalUsedMemory,omitempty"` //uint64 totalMemory = 2;
}

func (x *RdsMemoryUsageDataPoint) Reset() {
	*x = RdsMemoryUsageDataPoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RdsMemoryUsageDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RdsMemoryUsageDataPoint) ProtoMessage() {}

func (x *RdsMemoryUsageDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RdsMemoryUsageDataPoint.ProtoReflect.Descriptor instead.
func (*RdsMemoryUsageDataPoint) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{4}
}

func (x *RdsMemoryUsageDataPoint) GetTotalUsedMemory() uint64 {
	if x != nil {
		return x.TotalUsedMemory
	}
	return 0
}

type DataPointsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartTimestampInSec uint64                        `protobuf:"varint,1,opt,name=startTimestampInSec,proto3" json:"startTimestampInSec,omitempty"`
	TimeIntervalInSec   uint32                        `protobuf:"varint,2,opt,name=timeIntervalInSec,proto3" json:"timeIntervalInSec,omitempty"`
	TransferRates       []*TotalTransferRateDataPoint `protobuf:"bytes,3,rep,name=transferRates,proto3" json:"transferRates,omitempty"`
	FileRates           []*TotalFileRateDataPoint     `protobuf:"bytes,4,rep,name=fileRates,proto3" json:"fileRates,omitempty"`
	TaskTimes           []*TaskTimeDataPoint          `protobuf:"bytes,5,rep,name=taskTimes,proto3" json:"taskTimes,omitempty"`
	MemoryUsages        []*RdsMemoryUsageDataPoint    `protobuf:"bytes,6,rep,name=memoryUsages,proto3" json:"memoryUsages,omitempty"`
}

func (x *DataPointsResponse) Reset() {
	*x = DataPointsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataPointsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPointsResponse) ProtoMessage() {}

func (x *DataPointsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPointsResponse.ProtoReflect.Descriptor instead.
func (*DataPointsResponse) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{5}
}

func (x *DataPointsResponse) GetStartTimestampInSec() uint64 {
	if x != nil {
		return x.StartTimestampInSec
	}
	return 0
}

func (x *DataPointsResponse) GetTimeIntervalInSec() uint32 {
	if x != nil {
		return x.TimeIntervalInSec
	}
	return 0
}

func (x *DataPointsResponse) GetTransferRates() []*TotalTransferRateDataPoint {
	if x != nil {
		return x.TransferRates
	}
	return nil
}

func (x *DataPointsResponse) GetFileRates() []*TotalFileRateDataPoint {
	if x != nil {
		return x.FileRates
	}
	return nil
}

func (x *DataPointsResponse) GetTaskTimes() []*TaskTimeDataPoint {
	if x != nil {
		return x.TaskTimes
	}
	return nil
}

func (x *DataPointsResponse) GetMemoryUsages() []*RdsMemoryUsageDataPoint {
	if x != nil {
		return x.MemoryUsages
	}
	return nil
}

type MetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName        string   `protobuf:"bytes,1,opt,name=clusterName,proto3" json:"clusterName,omitempty"`
	AvailableBeamtimes []string `protobuf:"bytes,2,rep,name=availableBeamtimes,proto3" json:"availableBeamtimes,omitempty"`
}

func (x *MetadataResponse) Reset() {
	*x = MetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataResponse) ProtoMessage() {}

func (x *MetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataResponse.ProtoReflect.Descriptor instead.
func (*MetadataResponse) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{6}
}

func (x *MetadataResponse) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *MetadataResponse) GetAvailableBeamtimes() []string {
	if x != nil {
		return x.AvailableBeamtimes
	}
	return nil
}

type ToplogyQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromTimestamp  uint64 `protobuf:"varint,1,opt,name=fromTimestamp,proto3" json:"fromTimestamp,omitempty"`
	ToTimestamp    uint64 `protobuf:"varint,2,opt,name=toTimestamp,proto3" json:"toTimestamp,omitempty"`
	BeamtimeFilter string `protobuf:"bytes,3,opt,name=beamtimeFilter,proto3" json:"beamtimeFilter,omitempty"`
}

func (x *ToplogyQuery) Reset() {
	*x = ToplogyQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToplogyQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToplogyQuery) ProtoMessage() {}

func (x *ToplogyQuery) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToplogyQuery.ProtoReflect.Descriptor instead.
func (*ToplogyQuery) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{7}
}

func (x *ToplogyQuery) GetFromTimestamp() uint64 {
	if x != nil {
		return x.FromTimestamp
	}
	return 0
}

func (x *ToplogyQuery) GetToTimestamp() uint64 {
	if x != nil {
		return x.ToTimestamp
	}
	return 0
}

func (x *ToplogyQuery) GetBeamtimeFilter() string {
	if x != nil {
		return x.BeamtimeFilter
	}
	return ""
}

type TopologyResponseNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId            string   `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Level             uint32   `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
	ConsumerInstances []string `protobuf:"bytes,3,rep,name=consumerInstances,proto3" json:"consumerInstances,omitempty"`
	ProducerInstances []string `protobuf:"bytes,4,rep,name=producerInstances,proto3" json:"producerInstances,omitempty"`
}

func (x *TopologyResponseNode) Reset() {
	*x = TopologyResponseNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyResponseNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyResponseNode) ProtoMessage() {}

func (x *TopologyResponseNode) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyResponseNode.ProtoReflect.Descriptor instead.
func (*TopologyResponseNode) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{8}
}

func (x *TopologyResponseNode) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *TopologyResponseNode) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *TopologyResponseNode) GetConsumerInstances() []string {
	if x != nil {
		return x.ConsumerInstances
	}
	return nil
}

func (x *TopologyResponseNode) GetProducerInstances() []string {
	if x != nil {
		return x.ProducerInstances
	}
	return nil
}

type TopologyResponseEdge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromNodeId        string   `protobuf:"bytes,1,opt,name=fromNodeId,proto3" json:"fromNodeId,omitempty"`
	ToNodeId          string   `protobuf:"bytes,2,opt,name=toNodeId,proto3" json:"toNodeId,omitempty"`
	SourceName        string   `protobuf:"bytes,3,opt,name=sourceName,proto3" json:"sourceName,omitempty"`
	InvolvedReceivers []string `protobuf:"bytes,4,rep,name=involvedReceivers,proto3" json:"involvedReceivers,omitempty"`
}

func (x *TopologyResponseEdge) Reset() {
	*x = TopologyResponseEdge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyResponseEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyResponseEdge) ProtoMessage() {}

func (x *TopologyResponseEdge) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyResponseEdge.ProtoReflect.Descriptor instead.
func (*TopologyResponseEdge) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{9}
}

func (x *TopologyResponseEdge) GetFromNodeId() string {
	if x != nil {
		return x.FromNodeId
	}
	return ""
}

func (x *TopologyResponseEdge) GetToNodeId() string {
	if x != nil {
		return x.ToNodeId
	}
	return ""
}

func (x *TopologyResponseEdge) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

func (x *TopologyResponseEdge) GetInvolvedReceivers() []string {
	if x != nil {
		return x.InvolvedReceivers
	}
	return nil
}

type TopologyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*TopologyResponseNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges []*TopologyResponseEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
}

func (x *TopologyResponse) Reset() {
	*x = TopologyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_AsapoMonitoringQueryService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopologyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopologyResponse) ProtoMessage() {}

func (x *TopologyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_AsapoMonitoringQueryService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopologyResponse.ProtoReflect.Descriptor instead.
func (*TopologyResponse) Descriptor() ([]byte, []int) {
	return file_AsapoMonitoringQueryService_proto_rawDescGZIP(), []int{10}
}

func (x *TopologyResponse) GetNodes() []*TopologyResponseNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *TopologyResponse) GetEdges() []*TopologyResponseEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

var File_AsapoMonitoringQueryService_proto protoreflect.FileDescriptor

var file_AsapoMonitoringQueryService_proto_rawDesc = []byte{
	0x0a, 0x21, 0x41, 0x73, 0x61, 0x70, 0x6f, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x41, 0x73, 0x61, 0x70, 0x6f, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x03, 0x0a, 0x0f, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x66,
	0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x65, 0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x65, 0x61,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x36, 0x0a, 0x16, 0x66, 0x72, 0x6f, 0x6d, 0x50,
	0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x14, 0x74, 0x6f, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65,
	0x70, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74,
	0x6f, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x74, 0x65, 0x70, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x11, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x11, 0x70, 0x69,
	0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x22,
	0xf8, 0x01, 0x0a, 0x1a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x52, 0x65, 0x63, 0x76, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52, 0x65,
	0x63, 0x76, 0x12, 0x32, 0x0a, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53,
	0x65, 0x63, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x38, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52, 0x64, 0x73, 0x53, 0x65, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52, 0x64, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x38, 0x0a, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x46, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x53, 0x65, 0x63, 0x46, 0x74, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x16, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x63, 0x61, 0x63, 0x68, 0x65, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x66,
	0x72, 0x6f, 0x6d, 0x44, 0x69, 0x73, 0x6b, 0x22, 0xdb, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x28, 0x0a,
	0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49, 0x6f, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x49,
	0x6f, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x77, 0x72, 0x69, 0x74, 0x65,
	0x54, 0x6f, 0x44, 0x69, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x11, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x69, 0x73, 0x6b, 0x54,
	0x69, 0x6d, 0x65, 0x55, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x77, 0x72, 0x69, 0x74, 0x65, 0x54, 0x6f, 0x44, 0x61, 0x74,
	0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x72,
	0x64, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x55, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17, 0x72, 0x64,
	0x73, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x55, 0x73, 0x22, 0x43, 0x0a, 0x17, 0x52, 0x64, 0x73, 0x4d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x55, 0x73, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x22, 0xde, 0x02, 0x0a, 0x12, 0x44,
	0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x49, 0x6e,
	0x53, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x11, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72,
	0x76, 0x61, 0x6c, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11,
	0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x49, 0x6e, 0x53, 0x65,
	0x63, 0x12, 0x41, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x74,
	0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3c, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x52, 0x64, 0x73, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x64, 0x0a, 0x10, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2e, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65,
	0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x65, 0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x22, 0x7e, 0x0a, 0x0c, 0x54, 0x6f, 0x70, 0x6c, 0x6f, 0x67, 0x79, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x74, 0x6f,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x65, 0x61,
	0x6d, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x65, 0x61, 0x6d, 0x74, 0x69, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f,
	0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x14, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x67, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x69, 0x6e, 0x76,
	0x6f, 0x6c, 0x76, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x52, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x73, 0x22, 0x6c, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x6e,
	0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x6f, 0x70,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x64, 0x67, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f,
	0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x45, 0x64, 0x67, 0x65, 0x52, 0x05,
	0x65, 0x64, 0x67, 0x65, 0x73, 0x2a, 0x5b, 0x0a, 0x1b, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f,
	0x51, 0x55, 0x45, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09,
	0x45, 0x78, 0x61, 0x63, 0x74, 0x50, 0x61, 0x74, 0x68, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x4a,
	0x75, 0x73, 0x74, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x6f, 0x53, 0x74, 0x65, 0x70,
	0x10, 0x02, 0x32, 0xb6, 0x01, 0x0a, 0x1b, 0x41, 0x73, 0x61, 0x70, 0x6f, 0x4d, 0x6f, 0x6e, 0x69,
	0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x06, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x12, 0x0d, 0x2e,
	0x54, 0x6f, 0x70, 0x6c, 0x6f, 0x67, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x11, 0x2e, 0x54,
	0x6f, 0x70, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x38, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x12, 0x10, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x1a, 0x13, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x2e,
	0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_AsapoMonitoringQueryService_proto_rawDescOnce sync.Once
	file_AsapoMonitoringQueryService_proto_rawDescData = file_AsapoMonitoringQueryService_proto_rawDesc
)

func file_AsapoMonitoringQueryService_proto_rawDescGZIP() []byte {
	file_AsapoMonitoringQueryService_proto_rawDescOnce.Do(func() {
		file_AsapoMonitoringQueryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_AsapoMonitoringQueryService_proto_rawDescData)
	})
	return file_AsapoMonitoringQueryService_proto_rawDescData
}

var file_AsapoMonitoringQueryService_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_AsapoMonitoringQueryService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_AsapoMonitoringQueryService_proto_goTypes = []interface{}{
	(PipelineConnectionQueryMode)(0),   // 0: PipelineConnectionQueryMode
	(*DataPointsQuery)(nil),            // 1: DataPointsQuery
	(*TotalTransferRateDataPoint)(nil), // 2: TotalTransferRateDataPoint
	(*TotalFileRateDataPoint)(nil),     // 3: TotalFileRateDataPoint
	(*TaskTimeDataPoint)(nil),          // 4: TaskTimeDataPoint
	(*RdsMemoryUsageDataPoint)(nil),    // 5: RdsMemoryUsageDataPoint
	(*DataPointsResponse)(nil),         // 6: DataPointsResponse
	(*MetadataResponse)(nil),           // 7: MetadataResponse
	(*ToplogyQuery)(nil),               // 8: ToplogyQuery
	(*TopologyResponseNode)(nil),       // 9: TopologyResponseNode
	(*TopologyResponseEdge)(nil),       // 10: TopologyResponseEdge
	(*TopologyResponse)(nil),           // 11: TopologyResponse
	(*Empty)(nil),                      // 12: Empty
}
var file_AsapoMonitoringQueryService_proto_depIdxs = []int32{
	0,  // 0: DataPointsQuery.pipelineQueryMode:type_name -> PipelineConnectionQueryMode
	2,  // 1: DataPointsResponse.transferRates:type_name -> TotalTransferRateDataPoint
	3,  // 2: DataPointsResponse.fileRates:type_name -> TotalFileRateDataPoint
	4,  // 3: DataPointsResponse.taskTimes:type_name -> TaskTimeDataPoint
	5,  // 4: DataPointsResponse.memoryUsages:type_name -> RdsMemoryUsageDataPoint
	9,  // 5: TopologyResponse.nodes:type_name -> TopologyResponseNode
	10, // 6: TopologyResponse.edges:type_name -> TopologyResponseEdge
	12, // 7: AsapoMonitoringQueryService.GetMetadata:input_type -> Empty
	8,  // 8: AsapoMonitoringQueryService.GetTopology:input_type -> ToplogyQuery
	1,  // 9: AsapoMonitoringQueryService.GetDataPoints:input_type -> DataPointsQuery
	7,  // 10: AsapoMonitoringQueryService.GetMetadata:output_type -> MetadataResponse
	11, // 11: AsapoMonitoringQueryService.GetTopology:output_type -> TopologyResponse
	6,  // 12: AsapoMonitoringQueryService.GetDataPoints:output_type -> DataPointsResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_AsapoMonitoringQueryService_proto_init() }
func file_AsapoMonitoringQueryService_proto_init() {
	if File_AsapoMonitoringQueryService_proto != nil {
		return
	}
	file_AsapoMonitoringCommonService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_AsapoMonitoringQueryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointsQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalTransferRateDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TotalFileRateDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTimeDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RdsMemoryUsageDataPoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataPointsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToplogyQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyResponseNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyResponseEdge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_AsapoMonitoringQueryService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopologyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_AsapoMonitoringQueryService_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_AsapoMonitoringQueryService_proto_goTypes,
		DependencyIndexes: file_AsapoMonitoringQueryService_proto_depIdxs,
		EnumInfos:         file_AsapoMonitoringQueryService_proto_enumTypes,
		MessageInfos:      file_AsapoMonitoringQueryService_proto_msgTypes,
	}.Build()
	File_AsapoMonitoringQueryService_proto = out.File
	file_AsapoMonitoringQueryService_proto_rawDesc = nil
	file_AsapoMonitoringQueryService_proto_goTypes = nil
	file_AsapoMonitoringQueryService_proto_depIdxs = nil
}
